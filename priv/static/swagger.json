{
  "info": {
    "version": "1.0",
    "description": "API Documentation for Simple Bank v1, developed to simulate simple bank transactions.",
    "title": "Simple Bank",
    "termsOfService": "Open for public",
    "contact": {
      "name": "Jo√£o Vitor Rankel Siben",
      "email": "joaovitor.jvrs6@gmail.com"
    }
  },
  "host": "localhost:4000",
  "definitions": {
    "TransactionRequest": {
      "description": "POST body for cratong a transaction",
      "properties": {
        "account_number": {
          "description": "Account Number",
          "type": "integer"
        },
        "amount": {
          "description": "Amount",
          "format": "decimal",
          "type": "string"
        },
        "recipient_number": {
          "description": "Recipient Number",
          "type": "integer"
        },
        "type": {
          "description": "Type",
          "enum": [
            "transfer",
            "deposit",
            "withdraw"
          ],
          "type": "string"
        }
      },
      "required": [
        "account_number",
        "amount",
        "type"
      ],
      "title": "Transaction Request",
      "type": "object"
    },
    "TransactionResponse": {
      "description": "Response schema for a single transaction",
      "properties": {
        "account": {
          "$ref": "#/definitions/TransactionAccount",
          "description": "Transaction Account"
        },
        "amount": {
          "description": "Amount",
          "type": "string"
        },
        "id": {
          "description": "Transaction ID",
          "format": "binary",
          "type": "string"
        },
        "inserted_at": {
          "description": "Insertion date",
          "format": "date_time",
          "type": "string"
        },
        "number": {
          "description": "Number",
          "type": "ineger"
        },
        "recipient": {
          "$ref": "#/definitions/TransactionAccount",
          "description": "Transaction Account Received"
        },
        "status": {
          "description": "Status",
          "type": "string"
        },
        "type": {
          "description": "Type",
          "type": "string"
        },
        "updated_at": {
          "description": "Update date",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "recipient",
        "account",
        "status",
        "type",
        "amount",
        "number",
        "id"
      ],
      "title": "Transaction Response",
      "type": "object"
    },
    "TransactionAccount": {
      "description": "Account scheme that is returned along with the transactions",
      "properties": {
        "id": {
          "description": "Account ID",
          "format": "binary",
          "type": "string"
        },
        "number": {
          "description": "Account Number",
          "type": "integer"
        },
        "type": {
          "description": "Account Type",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/TransactionAccountUser",
          "description": "Account User"
        }
      },
      "required": [
        "user",
        "type",
        "number",
        "id"
      ],
      "title": "Transaction Account",
      "type": "object"
    },
    "TransactionAccountUser": {
      "description": "User schema returned along with accounts in transaction queries",
      "properties": {
        "cpf": {
          "description": "User CPF",
          "type": "string"
        },
        "first_name": {
          "description": "User First Name",
          "type": "string"
        },
        "id": {
          "description": "User ID",
          "type": "string"
        },
        "last_name": {
          "description": "User Last Name",
          "type": "string"
        }
      },
      "required": [
        "cpf",
        "last_name",
        "first_name",
        "id"
      ],
      "title": "Transaction Account Schema",
      "type": "object"
    },
    "AccountRequest": {
      "description": "POST body for creating a account",
      "properties": {
        "balance": {
          "description": "Balance",
          "format": "decimal",
          "type": "string"
        },
        "type": {
          "description": "Type",
          "enum": [
            "chain",
            "wage",
            "saving"
          ],
          "type": "string"
        },
        "user_id": {
          "description": "User ID",
          "type": "string"
        }
      },
      "required": [
        "user_id",
        "type"
      ],
      "title": "Account Request",
      "type": "object"
    },
    "AccountResponse": {
      "description": "Response schema for a single account",
      "properties": {
        "balance": {
          "description": "Balance",
          "format": "decimal",
          "type": "string"
        },
        "id": {
          "description": "Account ID",
          "format": "binary",
          "type": "string"
        },
        "inserted_at": {
          "description": "Insertion date",
          "format": "date_time",
          "type": "string"
        },
        "number": {
          "description": "Number",
          "type": "integer"
        },
        "transactions_received": {
          "description": "Transactions Received",
          "items": {
            "items": {
              "$ref": "#/definitions/AccountTransactions"
            },
            "type": "array"
          },
          "type": "array"
        },
        "transactions_sent": {
          "description": "Transactions Sent",
          "items": {
            "items": {
              "$ref": "#/definitions/AccountTransactions"
            },
            "type": "array"
          },
          "type": "array"
        },
        "type": {
          "description": "Type",
          "type": "string"
        },
        "updated_at": {
          "description": "Update date",
          "format": "date-time",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/AccountUser",
          "description": "User"
        }
      },
      "required": [
        "user",
        "type",
        "balance",
        "number",
        "id"
      ],
      "title": "Account Response",
      "type": "object"
    },
    "AccountsResponse": {
      "description": "Response schema for a many account",
      "properties": {
        "id": {
          "description": "Account ID",
          "format": "binary",
          "type": "string"
        },
        "number": {
          "description": "Number",
          "type": "integer"
        },
        "type": {
          "description": "Type",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/AccountUser",
          "description": "User"
        }
      },
      "required": [
        "user",
        "type",
        "number",
        "id"
      ],
      "title": "Accounts Response",
      "type": "object"
    },
    "AccountUser": {
      "description": "User schema that is returned along with the account search",
      "properties": {
        "cpf": {
          "description": "CPF",
          "type": "string"
        },
        "first_name": {
          "description": "Fist Name",
          "type": "string"
        },
        "id": {
          "description": "User ID",
          "format": "binary",
          "type": "string"
        },
        "last_name": {
          "description": "Last Name",
          "type": "string"
        }
      },
      "required": [
        "cpf",
        "last_name",
        "first_name",
        "id"
      ],
      "title": "Account User",
      "type": "object"
    },
    "AccountTransactions": {
      "description": "Transaction scheme that is returned along with the accounts",
      "properties": {
        "amount": {
          "description": "Amount",
          "format": "decimal",
          "type": "string"
        },
        "id": {
          "description": "Account ID",
          "format": "binary",
          "type": "string"
        },
        "inserted_at": {
          "description": "Insertion date",
          "format": "date_time",
          "type": "string"
        },
        "number": {
          "description": "Number",
          "type": "integer"
        },
        "status": {
          "description": "Status",
          "type": "string"
        },
        "type": {
          "description": "Type",
          "type": "string"
        },
        "updated_at": {
          "description": "Update date",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "status",
        "type",
        "amount",
        "number",
        "id"
      ],
      "title": "Account Transactions",
      "type": "object"
    },
    "UserRequest": {
      "description": "POST body for creating a user",
      "properties": {
        "address": {
          "description": "Address",
          "type": "string"
        },
        "birth": {
          "description": "Birth date",
          "format": "date",
          "type": "string"
        },
        "cep": {
          "description": "CEP",
          "type": "string"
        },
        "cpf": {
          "description": "CPF",
          "type": "string"
        },
        "first_name": {
          "description": "Fist Name",
          "type": "string"
        },
        "last_name": {
          "description": "Last Name",
          "type": "string"
        }
      },
      "required": [
        "cep",
        "address",
        "birth",
        "cpf",
        "last_name",
        "first_name"
      ],
      "title": "User Request",
      "type": "object"
    },
    "UserResponse": {
      "description": "Response schema for a single user",
      "properties": {
        "accounts": {
          "description": "User Account",
          "items": {
            "items": {
              "$ref": "#/definitions/UserAccount"
            },
            "type": "array"
          },
          "type": "array"
        },
        "address": {
          "description": "Address",
          "type": "string"
        },
        "birth": {
          "description": "Birth date",
          "format": "date",
          "type": "string"
        },
        "cep": {
          "description": "CEP",
          "type": "string"
        },
        "cpf": {
          "description": "CPF",
          "type": "string"
        },
        "first_name": {
          "description": "Fist Name",
          "type": "string"
        },
        "id": {
          "description": "User ID",
          "format": "binary",
          "type": "string"
        },
        "inserted_at": {
          "description": "Insertion date",
          "format": "date_time",
          "type": "string"
        },
        "last_name": {
          "description": "Last Name",
          "type": "string"
        },
        "updated_at": {
          "description": "Update date",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "cep",
        "address",
        "birth",
        "cpf",
        "last_name",
        "first_name",
        "id"
      ],
      "title": "User Response",
      "type": "object"
    },
    "UsersResponse": {
      "description": "Response schema for a many user",
      "properties": {
        "accounts": {
          "description": "Users Account",
          "items": {
            "items": {
              "$ref": "#/definitions/UsersAccount"
            },
            "type": "array"
          },
          "type": "array"
        },
        "cpf": {
          "description": "CPF",
          "type": "string"
        },
        "first_name": {
          "description": "Fist Name",
          "type": "string"
        },
        "id": {
          "description": "User ID",
          "format": "binary",
          "type": "string"
        },
        "last_name": {
          "description": "Last Name",
          "type": "string"
        }
      },
      "required": [
        "cpf",
        "last_name",
        "first_name",
        "id"
      ],
      "title": "Users Response",
      "type": "object"
    },
    "UserAccount": {
      "description": "Account schema that is returned along with the user",
      "properties": {
        "balance": {
          "description": "Balance",
          "format": "decimal",
          "type": "string"
        },
        "id": {
          "description": "Account ID",
          "format": "binary",
          "type": "string"
        },
        "inserted_at": {
          "description": "Insertion date",
          "format": "date_time",
          "type": "string"
        },
        "number": {
          "description": "Number",
          "type": "integer"
        },
        "type": {
          "description": "Type",
          "type": "string"
        },
        "updated_at": {
          "description": "Update date",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "type",
        "balance",
        "number",
        "id"
      ],
      "title": "User Account",
      "type": "object"
    },
    "UsersAccount": {
      "description": "Account schema that is returned along with the usera",
      "properties": {
        "id": {
          "description": "Account ID",
          "format": "binary",
          "type": "string"
        },
        "number": {
          "description": "Number",
          "type": "integer"
        },
        "type": {
          "description": "Type",
          "type": "string"
        }
      },
      "required": [
        "type",
        "number",
        "id"
      ],
      "title": "Usera Account",
      "type": "object"
    }
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User resources"
    },
    {
      "name": "Accounts",
      "description": "Accounts resources"
    },
    {
      "name": "Transactions",
      "description": "Trasactions routes"
    }
  ],
  "paths": {
    "/api/accounts": {
      "get": {
        "description": "List all accounts in the database",
        "operationId": "SimpleBankWeb.AccountController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountsResponse"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "List all accounts",
        "tags": [
          "Accounts"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new account in the database",
        "operationId": "SimpleBankWeb.AccountController.create",
        "parameters": [
          {
            "description": "Account data",
            "in": "body",
            "name": "account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Create a new account",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/api/accounts/number/{number}": {
      "get": {
        "description": "Get a specified account by their Number",
        "operationId": "SimpleBankWeb.AccountController.show_by_number",
        "parameters": [
          {
            "description": "Account Number",
            "in": "path",
            "name": "number",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get a account by Number",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/api/accounts/type/{type}": {
      "get": {
        "description": "Get all accounts by a specified type",
        "operationId": "SimpleBankWeb.AccountController.show_by_type",
        "parameters": [
          {
            "description": "Account Type",
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountsResponse"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get accounts by type",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/api/accounts/user_id/{user_id}": {
      "get": {
        "description": "Get all accounts by a specified user ID",
        "operationId": "SimpleBankWeb.AccountController.show_by_user_id",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountsResponse"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get accounts by user ID",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/api/accounts/{id}": {
      "delete": {
        "description": "Deletes an existing account from the system",
        "operationId": "SimpleBankWeb.AccountController.delete",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Delete a account",
        "tags": [
          "Accounts"
        ]
      },
      "get": {
        "description": "Get a specified account by their ID",
        "operationId": "SimpleBankWeb.AccountController.show",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get a account by ID",
        "tags": [
          "Accounts"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a existing account in the database",
        "operationId": "SimpleBankWeb.AccountController.update",
        "parameters": [
          {
            "description": "Account ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Account data",
            "in": "body",
            "name": "account",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Update a existing account",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/api/transactions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new transaction in the database",
        "operationId": "SimpleBankWeb.TransactionController.create",
        "parameters": [
          {
            "description": "Transaction data",
            "in": "body",
            "name": "transaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransactionResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "summary": "Creaye a new transaction",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/api/transactions/{id}": {
      "get": {
        "description": "Get a specified transaction by their ID",
        "operationId": "SimpleBankWeb.TransactionController.show",
        "parameters": [
          {
            "description": "Transaction ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransactionResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get a transaction by ID",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/api/users": {
      "get": {
        "description": "List all users in the database",
        "operationId": "SimpleBankWeb.UserController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsersResponse"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "List all users",
        "tags": [
          "Users"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new user in the database",
        "operationId": "SimpleBankWeb.UserController.create",
        "parameters": [
          {
            "description": "User data",
            "in": "body",
            "name": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "summary": "Create a new user",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/name/{name}": {
      "get": {
        "description": "Get users that match the search by name",
        "operationId": "SimpleBankWeb.UserController.show_by_name",
        "parameters": [
          {
            "description": "User name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsersResponse"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get users by name",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}": {
      "delete": {
        "description": "Deletes an existing user from the system",
        "operationId": "SimpleBankWeb.UserController.delete",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Delete a user",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "description": "Get a specified user by their ID",
        "operationId": "SimpleBankWeb.UserController.show",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get a user by ID",
        "tags": [
          "Users"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a existing user in the database",
        "operationId": "SimpleBankWeb.UserController.update",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "User data",
            "in": "body",
            "name": "user",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Update a existing user",
        "tags": [
          "Users"
        ]
      }
    }
  },
  "swagger": "2.0"
}